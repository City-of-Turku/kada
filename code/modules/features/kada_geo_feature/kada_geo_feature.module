<?php
/**
 * @file
 * Code for the KADA Geo feature.
 */

include_once 'kada_geo_feature.features.inc';
/**
 * Implementation of hook_form_alter()
 */
function kada_geo_feature_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    $view = $form_state['view'];
    $view_id = $view->name;

    // Demo view
    $view_ids = array('kada_proximity_list');
    if (in_array($view_id, $view_ids)) {
      drupal_add_js(drupal_get_path('module', 'kada_geo_feature') . '/js/get_location.js');
    }

    // Add js for nearby view displays
    $nearby_displays = array('tab_nearby', 'tab_section_nearby');
    if (in_array($view->current_display, $nearby_displays)) {
      drupal_add_js(drupal_get_path('module', 'kada_geo_feature') . '/js/get_location.js');
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function kada_geo_feature_views_pre_render(&$view) {
  // Adding links to map/list, the machine names have to match the cases below.
  $views = array(
    'kada_solr_service_map',
    'kada_services_on_map',
  );
  if (in_array($view->name, $views)) {
    // Get views parameters for link generation
    $query = drupal_get_query_parameters();
    // Remove page parameter because it can potentially break map display,
    // which doesn't have paging
    unset($query['page']);
    // Facet API Pretty paths are part of the current URL
    $current_path = current_path();
    // Get the paths for displays for replacement in the URL
    $map_path = $view->display['services_map']->display_options['path'];
    $list_path = $view->display['services_list']->display_options['path'];
    // For link generation
    $map_link_text = t('Map');
    $list_link_text = t('List');
    // Get path for link from view configuration
    switch ($view->current_display) {
      case 'services_list':
        $map_path = str_replace($list_path, $map_path, $current_path);
        $map_link_options = array('attributes' => array('class' => array('map-link')), 'query' => $query);
        $map_link = l($map_link_text, $map_path, $map_link_options);
        $view->attachment_before = '<ul class="tabs"><li>' . $map_link . '</li><li class="active"><a href="javascript:;">' . $list_link_text . '</a></li></ul>';
      break;
      case 'services_map':
        $list_path = str_replace($map_path, $list_path, $current_path);
        $list_link_options = array('attributes' => array('class' => array('list-link')), 'query' => $query);
        $list_link = l($list_link_text, $list_path, $list_link_options);
        $view->attachment_before = '<ul class="tabs"><li class="active"><a href="javascript:;">' . $map_link_text . '</a></li><li>' . $list_link  . '</li></ul>';
      break;
    }
  }
}
