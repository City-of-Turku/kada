<?php
/**
 * @file
 * Code for the KADA Editorial Tools feature.
 */

include_once 'kada_editorial_tools_feature.features.inc';

/**
 * Creating edit and remove links to admin/content page
 */
function _kada_editorial_tools_feature_content_links($path, $link_title, $title_language) {
  // Get language list for later use in l() function
  $language_list = language_list();
  // Get query parameters
  $query = drupal_get_query_parameters();
  // Create variable for query paramaters
  $query_destination = '';

  // If $query not empty fill $query_destination with data from $query
  if (!empty($query)) {
    $query_destination = '?title=' . $query['title'];
    $query_destination .= '&author=' . $query['author'];
    $query_destination .= '&type=' . $query['type'];
    $query_destination .= '&status=' . $query['status'];
    $query_destination .= '&language=' . $query['language'];
    $query_destination .= '&language_1=' . $query['language_1'];
  }

  $options = array(
    'query' => array(
      'destination' => 'admin/content' . $query_destination,
    ),
  );

  if ($title_language != 'all') {
    // Add language to link
    $language = array(
      'language' => $language_list[$title_language],
    );
    // Merge $options['query'] and $options['language']
    $options = array_merge($options, $language);
  }

  // Check if empty options variable
  // If empty make an empty array
  // Views ajax will crash if array not made
  if (empty($options)) {
    $options = array();
  }

  $link = l(t($link_title), $path, $options);

  // Return created link
  return $link;
}

/**
 * Implements HOOK_preprocess_views_view_table
 * Creating custom edit links
 */
function kada_editorial_tools_feature_preprocess_views_view_table(&$vars) {
  if ($vars['view']->name == 'kada_admin_content' && $vars['view']->current_display == 'page') {
    // lower the string character
    $title_language = strtolower($vars['view']->exposed_raw_input['language_1']);

    foreach ($vars['rows'] as $key => $row) {
      // Use default edit path
      $edit_path = $row['nid'];
      // Replace edit with delete for delete path
      $delete_path = str_replace('edit', 'delete', $row['nid']);

      // Create edit link
      $edit_link = _kada_editorial_tools_feature_content_links($edit_path, 'Edit', $title_language);
      // Create delete link
      $remove_link = _kada_editorial_tools_feature_content_links($delete_path, 'Delete', $title_language);

      // Fill information to global text field
      $row['nid'] = $edit_link . ' - ' . $remove_link;

      // Set new row for rendering
      $vars['rows'][$key] = $row;
    }
  }
}

/**
 *  Implements hook_wysiwyg_editor_settings_alter().
 */
function kada_editorial_tools_feature_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor === 'ckeditor') {
    $settings['customConfig'] = base_path() . drupal_get_path('module', 'kada_editorial_tools_feature') . '/ckeditor_custom_config.js';
  }
}
